{"version":3,"sources":["HomePage/HomePage.js","AddRoom/AddRoom.js","Room/Room.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","useState","roomArr","handleEnterRoom","e","CurrRoomId","target","id","handleDeleteRoom","deleteRoom","className","to","style","textDecoration","length","onClick","deleteAllRooms","map","type","key","name","backgroundColor","color","AddRoom","equipments","uuid","newRoom","setNewRoom","handleUpdateRoom","value","placeholder","onChange","defaultValue","addroom","alert","Room","currRoom","room","item","setItem","handleOnOff","i","inx","parseInt","onOff","handleDeleteItem","deleteItem","hidden","items","addEquip","status","role","aria-label","App","setRoomArr","setCurrRoom","setItems","listOfItems","roomId","filteredRooms","filter","currId","filteredRoom","updatedEquipArr","itemIdx","updatedRoomArr","equipArr","splice","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.906965d7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './HomePage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function HomePage(props) {\r\n\r\n    const [roomArr] = useState(props.roomArr);\r\n\r\n    const handleEnterRoom = (e) => {\r\n        props.CurrRoomId(e.target.id);\r\n    }\r\n\r\n    const handleDeleteRoom = (e) => {\r\n        props.deleteRoom(e.target.id);\r\n    }\r\n\r\n    const handleDeleteAllRooms = () => {\r\n        props.deleteAllRooms();\r\n    }\r\n\r\n    return (\r\n        <div className='homePage'>\r\n            <Link to='/addroom' style={{ textDecoration: 'none' }} className='linkAddRoom'>\r\n                <span className='addRoomBtn'>Add Room</span>\r\n            </Link>\r\n            <button className={props.roomArr.length > 0 ? 'addRoomBtn deleteBtn' : 'hiddenBtn'}\r\n                onClick={handleDeleteAllRooms}>Delete All Rooms</button>\r\n\r\n            <div className='roomsContainer'>\r\n                {roomArr.map((e) => (\r\n                    <div className={`singleRoom ${e.type}`} key={e.id}>\r\n\r\n                        <h3 className='roomName'>{e.name}</h3>\r\n                        <div className='roomDelete' id={e.id} onClick={handleDeleteRoom}>X</div>\r\n\r\n\r\n                        <Link to='/room' >\r\n                            <button\r\n                                id={e.id}\r\n                                onClick={handleEnterRoom}\r\n                                style={{ backgroundColor: e.color }}\r\n                                className='enterBtn'>Enter</button>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport './AddRoom.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function AddRoom(props) {\r\n\r\n    const [newRoom, setNewRoom] = useState(\r\n        {\r\n            name: '',\r\n            type: '',\r\n            color: '',\r\n            equipments: [],\r\n            id: uuid()\r\n        });\r\n\r\n    const handleUpdateRoom = (e) => {\r\n\r\n        setNewRoom({ ...newRoom, [e.target.name]: e.target.value })\r\n    }\r\n    const handleAddRoom = () => {\r\n\r\n        newRoom.name.length >= 1\r\n            ? props.addroom(newRoom)\r\n            : alert('Room Name must have at least 1 character')\r\n    }\r\n\r\n    return (\r\n        <div className='addRoomForm'>\r\n            <div className='nameHeader'>Room Name:</div>\r\n            <input\r\n                className='roomInputName'\r\n                type='text'\r\n                name='name'\r\n                placeholder='Name...'\r\n                onChange={handleUpdateRoom}></input>\r\n\r\n            <div className='typeHeader'>Type:</div>\r\n\r\n            <select\r\n                className='selectInput'\r\n                onChange={handleUpdateRoom}\r\n                name='type'>\r\n                <option defaultValue>Choose Room Type...</option>\r\n                <option value='Bedroom'>Bedroom</option>\r\n                <option value='Bathroom'>Bathroom</option>\r\n                <option value='Kitchen'>Kitchen</option>\r\n            </select>\r\n\r\n            <div className='colorHeader'>Pick a Color:</div>\r\n            <input\r\n                className='colorInput'\r\n                type='color'\r\n                name='color'\r\n                onChange={handleUpdateRoom}></input>\r\n\r\n            <Link to='/' className='addRoomLink'>\r\n                <button onClick={handleAddRoom} className='addBtn'>Add Room</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport './Room.css';\r\n\r\nexport default function Room(props) {\r\n\r\n    const [room] = useState(props.currRoom);\r\n    const [item, setItem] = useState('');\r\n\r\n\r\n    const handleOnOff = (i) => {\r\n        let inx = parseInt(i.target.value);\r\n\r\n        props.onOff(inx, room.id);\r\n    }\r\n\r\n    const handleAddEquip = () => {\r\n        if (item !=='') {\r\n            props.addEquip(item, room.id);\r\n        }\r\n    }\r\n\r\n    const handleDeleteItem = (i) => {\r\n        let inx = parseInt(i.target.value);\r\n\r\n        props.deleteItem(inx, room.id);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='roomContainer'>\r\n\r\n            <div className='card'>\r\n                <div className='addEquipHeader'><span>Add </span>Equipment</div>\r\n\r\n                <select className='roomSelect'\r\n                    onChange={e => setItem(e.target.value)}>\r\n                    <option hidden>{item === ''? 'Choose...' : item}</option>\r\n\r\n                    {props.items.map(e =>(\r\n                        <option key = {uuid()} className='selecOpt' name= {e}>{e}</option>\r\n                    ))};\r\n                </select>\r\n                <button\r\n                    onClick={handleAddEquip}\r\n                    className='addEquipBtn'>Add</button>\r\n                    <button\r\n                    onClick={handleDeleteItem}\r\n                    value={'200'}\r\n                    className={room.equipments.length > 0 ? 'addEquipBtn dltEquip' : 'dltBtnHidden'}>Clear Room</button>\r\n            </div>\r\n                <div className = 'itemCardContainer'>\r\n                    {room.equipments.map((e, i) => (\r\n                        <div key={uuid()} className={e.status === 'red' ? 'itemCard-off' : 'itemCard-on'}>\r\n                            {e.type}\r\n                            <button className='itemBtn powerBtn' value={i} onClick={handleOnOff}>👏</button>\r\n                            <button className='itemBtn deleteItemBtn' value={i} onClick={handleDeleteItem}><span role = 'img' aria-label=\"trash\">🗑️</span></button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport HomePage from './HomePage/HomePage';\nimport AddRoom from './AddRoom/AddRoom';\nimport Room from './Room/Room';\n\n\nfunction App() {\n\n  const [roomArr, setRoomArr] = useState([]);\n  const [currRoom, setCurrRoom] = useState([]);\n  const [items, setItems] = useState([]);\n\n  var listOfItems = [\n    ['desk lamp', 'television', 'fireplace', 'computer', 'stereo system', 'air conditioner'],\n    ['microwave', 'oven', 'kettle', 'wall lamp', 'television', 'air conditioner'],\n    ['water heater', 'wall lamp', 'washing machine', 'drying machine', 'air conditioner']\n  ];\n\n\n\n  const addroom = (newRoom) => {\n    setRoomArr([...roomArr, newRoom]);\n  }\n\n  const deleteRoom = (roomId) => {\n\n    let filteredRooms = roomArr.filter(e => e.id !== roomId);\n    setRoomArr(filteredRooms);\n  }\n\n  const deleteAllRooms = () => {\n    setRoomArr([]);\n  }\n\n  const CurrRoomId = (currId) => {\n    let filteredRoom = roomArr.filter(e => e.id === currId);\n\n    if (filteredRoom[0].type === 'Bedroom') {\n      setItems(listOfItems[0]);\n    }\n    else if (filteredRoom[0].type === 'Kitchen') {\n      setItems(listOfItems[1]);\n    }\n    else {\n      setItems(listOfItems[2]);\n    }\n\n    setCurrRoom(filteredRoom[0]);\n    \n  }\n\n  const addEquip = (item, id) => {\n    let updatedEquipArr = roomArr.map((room) => {\n      if (room.id === id && room.equipments.length < 199) {\n        room.equipments = [...room.equipments, { type: item, status: 'red' }];\n      }\n      return room;\n    });\n    setRoomArr(updatedEquipArr);\n  }\n\n\n\n  \n  const onOff = (itemIdx, roomId) => {\n    let updatedRoomArr = roomArr.map((room) => { \n\n      if (room.id === roomId) {\n        room.equipments.map((item, i) => {\n          if (i === itemIdx) {\n            if (item.status === \"red\") {\n              item.status = \"green\"\n            }\n            else {\n              item.status = \"red\"\n            }\n          }\n          return item;\n        });\n      }\n      return room;\n    });\n\n    setRoomArr(updatedRoomArr);\n  }\n\n  const deleteItem = (itemIdx, roomId) => {\n\n    let updatedRoomArr = roomArr.map((room) => {\n\n      if(itemIdx === 200){\n        room.equipments = [];\n      }\n      else if (room.id === roomId) {\n        let equipArr = room.equipments;\n        equipArr.splice(itemIdx,1);\n\n        room.equipments = equipArr;\n      }\n      else{\n        return room;\n      }\n      return room;\n      \n    });\n    setRoomArr(updatedRoomArr);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className='navbarWrapper'>\n          <Link to='/' className='homeSpan'>\n            <span >Home</span>\n            \n          </Link>\n\n          <span className='header'>\n            <span className='headerSmart'>Smart</span>House</span>\n        </div>\n\n\n        <Switch>\n          <Route exact path='/' component={() => { return <HomePage roomArr={roomArr} CurrRoomId={CurrRoomId} deleteRoom={deleteRoom} deleteAllRooms={deleteAllRooms} /> }} />\n          <Route exact path='/addroom' component={() => { return <AddRoom addroom={addroom} /> }} />\n          <Route exact path='/room' component={() => { return <Room currRoom={currRoom} addEquip={addEquip} onOff={onOff} items={items} deleteItem={deleteItem} /> }} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}